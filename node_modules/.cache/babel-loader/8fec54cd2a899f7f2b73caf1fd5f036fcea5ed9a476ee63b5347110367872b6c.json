{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  // Substitua estas configurações pelas suas próprias do Firebase Console\n  apiKey: \"AIzaSyCUgM3pmBHVYNCSoSi0jQgsIqnK-zPizmk\",\n  authDomain: \"newliv-db.firebaseapp.com\",\n  projectId: \"newliv-db\",\n  storageBucket: \"newliv-db.firebasestorage.app\",\n  messagingSenderId: \"188860434955\",\n  appId: \"1:188860434955:web:eaa51bd5b670235c0a150e\",\n  measurementId: \"G-4GC296K7NN\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const analytics = getAnalytics(app);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\n// Função para criar um novo usuário com estrutura específica\nexport const createUserWithRole = async (uid, role, {\n  name,\n  email\n}) => {\n  try {\n    const userData = {\n      role,\n      // 'gestor' ou 'corretor'\n      name,\n      // nome completo do usuário\n      email,\n      // email do usuário\n      createdAt: new Date().toISOString(),\n      status: 'active',\n      lastLogin: new Date().toISOString()\n    };\n    await setDoc(doc(db, 'users', uid), userData);\n    return userData;\n  } catch (error) {\n    console.error('Erro ao criar usuário:', error);\n    throw error;\n  }\n};\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","getAnalytics","getFirestore","doc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","db","createUserWithRole","uid","role","name","email","userData","createdAt","Date","toISOString","status","lastLogin","error","console"],"sources":["C:/Users/hexshadeveloper/Desktop/project/test1/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  // Substitua estas configurações pelas suas próprias do Firebase Console\r\n  apiKey: \"AIzaSyCUgM3pmBHVYNCSoSi0jQgsIqnK-zPizmk\",\r\n  authDomain: \"newliv-db.firebaseapp.com\",\r\n  projectId: \"newliv-db\",\r\n  storageBucket: \"newliv-db.firebasestorage.app\",\r\n  messagingSenderId: \"188860434955\",\r\n  appId: \"1:188860434955:web:eaa51bd5b670235c0a150e\",\r\n  measurementId: \"G-4GC296K7NN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\n// Função para criar um novo usuário com estrutura específica\r\nexport const createUserWithRole = async (uid, role, { name, email }) => {\r\n  try {\r\n    const userData = {\r\n      role,          // 'gestor' ou 'corretor'\r\n      name,          // nome completo do usuário\r\n      email,         // email do usuário\r\n      createdAt: new Date().toISOString(),\r\n      status: 'active',\r\n      lastLogin: new Date().toISOString(),\r\n    };\r\n\r\n    await setDoc(doc(db, 'users', uid), userData);\r\n    return userData;\r\n  } catch (error) {\r\n    console.error('Erro ao criar usuário:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default app; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAE9D,MAAMC,cAAc,GAAG;EACrB;EACAC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,2BAA2B;EACvCC,SAAS,EAAE,WAAW;EACtBC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGd,aAAa,CAACM,cAAc,CAAC;AACzC,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACY,GAAG,CAAC;AAC1C,OAAO,MAAME,IAAI,GAAGf,OAAO,CAACa,GAAG,CAAC;AAChC,OAAO,MAAMG,EAAE,GAAGd,YAAY,CAACW,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAMI,kBAAkB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,EAAE;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACtE,IAAI;IACF,MAAMC,QAAQ,GAAG;MACfH,IAAI;MAAW;MACfC,IAAI;MAAW;MACfC,KAAK;MAAU;MACfE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAED,MAAMrB,MAAM,CAACD,GAAG,CAACa,EAAE,EAAE,OAAO,EAAEE,GAAG,CAAC,EAAEI,QAAQ,CAAC;IAC7C,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
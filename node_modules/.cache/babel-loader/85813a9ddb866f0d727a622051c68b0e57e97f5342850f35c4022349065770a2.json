{"ast":null,"code":"import _objectSpread from\"C:/Users/hexshadeveloper/Desktop/project/test1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{db}from'../../firebase';import{collection,writeBatch,doc,query,getDocs,orderBy,where,getDoc,Timestamp}from'firebase/firestore';import{CloudArrowUpIcon,XCircleIcon,CheckCircleIcon,TrashIcon,UserGroupIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLUNAS_PERMITIDAS=['NOME','POSSUI CNPJ','TELEFONE','EMAIL','IDADES','PROFISSAO','PLANO ATUAL','STATUS'];export default function Leads(){const[uploading,setUploading]=useState(false);const[uploadStatus,setUploadStatus]=useState(null);const[selectedFile,setSelectedFile]=useState(null);const[showUploadModal,setShowUploadModal]=useState(false);const[showDistribuirModal,setShowDistribuirModal]=useState(false);const[leads,setLeads]=useState([]);const[loading,setLoading]=useState(true);const[selectedLeads,setSelectedLeads]=useState([]);const[corretores,setCorretores]=useState([]);const[selectedCorretor,setSelectedCorretor]=useState('');const[stats,setStats]=useState({naoDistribuidos:0,distribuidos:0});// Função para carregar os leads\nconst carregarLeads=async()=>{setLoading(true);try{const leadsRef=collection(db,'leads');// Modificado para buscar apenas leads não distribuídos\nconst q=query(leadsRef,where('corretor_id','==',null),orderBy('created_at','desc'));const snapshot=await getDocs(q);const leadsData=snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setLeads(leadsData);setStats({naoDistribuidos:leadsData.length,distribuidos:0});}catch(error){console.error('Erro ao carregar leads:',error);}finally{setLoading(false);}};// Função para carregar os corretores\nconst carregarCorretores=async()=>{try{const corretoresRef=collection(db,'users');const q=query(corretoresRef,where('role','==','corretor'));const snapshot=await getDocs(q);const corretoresData=snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setCorretores(corretoresData);}catch(error){console.error('Erro ao carregar corretores:',error);}};// Carrega os leads ao montar o componente\nuseEffect(()=>{carregarLeads();carregarCorretores();},[]);// Função para distribuir leads\nconst distribuirLeads=async()=>{if(!selectedCorretor||selectedLeads.length===0)return;try{setLoading(true);const leadsRef=collection(db,'leads');// Primeiro, verifica se todos os leads selecionados ainda existem e não estão distribuídos\nconst leadsExistentes=[];const leadsInexistentes=[];const leadsJaDistribuidos=[];for(const leadId of selectedLeads){const leadDoc=await getDoc(doc(leadsRef,leadId));if(!leadDoc.exists()){leadsInexistentes.push(leadId);}else if(leadDoc.data().corretor_id){leadsJaDistribuidos.push(leadId);}else{leadsExistentes.push(leadId);}}// Notifica sobre leads inexistentes ou já distribuídos\nif(leadsInexistentes.length>0||leadsJaDistribuidos.length>0){let mensagem='';if(leadsInexistentes.length>0){mensagem+=\"\".concat(leadsInexistentes.length,\" lead(s) n\\xE3o existe(m) mais no sistema.\\n\");}if(leadsJaDistribuidos.length>0){mensagem+=\"\".concat(leadsJaDistribuidos.length,\" lead(s) j\\xE1 foi(ram) distribu\\xEDdo(s) para outro corretor.\\n\");}alert(mensagem+'A lista será atualizada.');if(leadsExistentes.length===0){await carregarLeads();setShowDistribuirModal(false);setLoading(false);return;}}// Procede com a distribuição dos leads existentes e não distribuídos\nconst batch=writeBatch(db);leadsExistentes.forEach(leadId=>{const leadRef=doc(leadsRef,leadId);batch.update(leadRef,{corretor_id:selectedCorretor,data_distribuicao:Timestamp.now(),status:'novo',status_changes:0});});await batch.commit();// Remove os leads distribuídos da lista local\nsetLeads(prevLeads=>prevLeads.filter(lead=>!leadsExistentes.includes(lead.id)));// Atualiza as estatísticas\nsetStats(prev=>_objectSpread(_objectSpread({},prev),{},{naoDistribuidos:prev.naoDistribuidos-leadsExistentes.length,distribuidos:prev.distribuidos+leadsExistentes.length}));setSelectedLeads([]);setShowDistribuirModal(false);setSelectedCorretor('');alert(\"\".concat(leadsExistentes.length,\" lead(s) distribu\\xEDdo(s) com sucesso!\"));}catch(error){console.error('Erro ao distribuir leads:',error);alert('Erro ao distribuir leads. Por favor, tente novamente.');}finally{setLoading(false);}};// Função para limpar lista de leads\nconst limparLista=async()=>{if(!window.confirm('Tem certeza que deseja excluir todos os leads não distribuídos? Esta ação não pode ser desfeita.')){return;}setLoading(true);try{const leadsRef=collection(db,'leads');const q=query(leadsRef,where('corretor_id','==',null));const snapshot=await getDocs(q);const batch=writeBatch(db);snapshot.docs.forEach(doc=>{batch.delete(doc.ref);});await batch.commit();await carregarLeads();}catch(error){console.error('Erro ao limpar lista:',error);alert('Erro ao limpar lista. Tente novamente.');}finally{setLoading(false);}};const processarArquivoCSV=async file=>{setUploading(true);setUploadStatus(null);try{const reader=new FileReader();reader.onload=async e=>{try{let text=e.target.result;// Remove BOM se existir\nif(text.charCodeAt(0)===0xFEFF){text=text.slice(1);}console.log('Conteúdo do arquivo:',text.substring(0,500));// Normaliza quebras de linha\ntext=text.replace(/\\r\\n/g,'\\n').replace(/\\r/g,'\\n');const linhas=text.split('\\n');console.log('Número de linhas:',linhas.length);if(linhas.length===0){throw new Error('O arquivo está vazio');}// Detecta o separador (vírgula ou ponto e vírgula)\nconst primeiraLinha=linhas[0];const separador=primeiraLinha.includes(';')?';':',';console.log('Separador detectado:',separador);// Remove linhas vazias\nconst linhasValidas=linhas.filter(linha=>{const semEspacos=linha.trim();return semEspacos&&semEspacos!==separador;});if(linhasValidas.length===0){throw new Error('O arquivo não contém dados válidos');}console.log('Primeira linha:',linhasValidas[0]);// Processa o cabeçalho\nconst cabecalho=linhasValidas[0].split(separador).map(col=>col.trim()).map(col=>col.replace(/\"/g,'')).map(col=>col.toUpperCase());console.log('Colunas encontradas:',cabecalho);console.log('Colunas permitidas:',COLUNAS_PERMITIDAS);// Verifica cada coluna encontrada\nconst colunasValidas=cabecalho.some(col=>{const isValid=COLUNAS_PERMITIDAS.includes(col);console.log(\"Coluna \\\"\".concat(col,\"\\\" \\xE9 v\\xE1lida? \").concat(isValid));return isValid;});if(!colunasValidas){throw new Error('O arquivo não contém nenhuma das colunas permitidas.\\n\\n'+\"Colunas encontradas: \".concat(cabecalho.join(', '),\"\\n\\n\")+\"Colunas permitidas: \".concat(COLUNAS_PERMITIDAS.join(', ')));}const colunasEncontradas={};cabecalho.forEach((coluna,index)=>{if(COLUNAS_PERMITIDAS.includes(coluna)){colunasEncontradas[coluna]=index;}});const leads=[];// Processa as linhas de dados\nfor(let i=1;i<linhasValidas.length;i++){const linha=linhasValidas[i];const valores=linha.split(separador).map(val=>val.trim());const lead={};Object.entries(colunasEncontradas).forEach(_ref=>{let[coluna,index]=_ref;if(valores[index]){lead[coluna.toLowerCase().replace(/ /g,'_')]=valores[index].replace(/\"/g,'').trim();}});if(Object.keys(lead).length>0){lead.created_at=new Date();lead.corretor_id=null;leads.push(lead);}}if(leads.length===0){throw new Error('Nenhum lead válido encontrado no arquivo.');}console.log('Leads processados:',leads.slice(0,2));const batch=writeBatch(db);const leadsRef=collection(db,'leads');leads.forEach(lead=>{const docRef=doc(leadsRef);batch.set(docRef,lead);});await batch.commit();await carregarLeads();// Recarrega os leads após salvar\nsetUploadStatus({success:true,message:\"\".concat(leads.length,\" leads importados com sucesso!\")});setSelectedFile(null);setShowUploadModal(false);// Fecha o modal após o sucesso\n}catch(error){console.error('Erro detalhado:',error);setUploadStatus({success:false,message:error.message||'Erro ao processar o arquivo CSV.'});}};reader.readAsText(file,'UTF-8');}catch(error){console.error('Erro no processamento:',error);setUploadStatus({success:false,message:'Erro ao processar o arquivo.'});}finally{setUploading(false);}};const handleFileSelect=event=>{const file=event.target.files[0];if(file){if(file.type!=='text/csv'){setUploadStatus({success:false,message:'Por favor, selecione um arquivo CSV.'});return;}setSelectedFile(file);setUploadStatus(null);}};const handleUpload=()=>{if(selectedFile){processarArquivoCSV(selectedFile);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-6 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Leads\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 flex items-center space-x-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\",children:[stats.naoDistribuidos,\" n\\xE3o distribu\\xEDdos\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\",children:[stats.distribuidos,\" distribu\\xEDdos\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[selectedLeads.length>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowDistribuirModal(true),className:\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",children:[/*#__PURE__*/_jsx(UserGroupIcon,{className:\"h-5 w-5 mr-2\"}),\"Distribuir (\",selectedLeads.length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowUploadModal(true),className:\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:\"h-5 w-5 mr-2\"}),\"Importar CSV\"]}),stats.naoDistribuidos>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:limparLista,className:\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\",children:[/*#__PURE__*/_jsx(TrashIcon,{className:\"h-5 w-5 mr-2\"}),\"Limpar Lista\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow overflow-hidden sm:rounded-md\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-center text-gray-500\",children:\"Carregando leads...\"}):leads.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-center text-gray-500\",children:\"Nenhum lead encontrado\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"divide-y divide-gray-200\",children:leads.map(lead=>/*#__PURE__*/_jsx(\"li\",{className:\"px-4 py-2 hover:bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[!lead.corretor_id&&/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded mr-4\",checked:selectedLeads.includes(lead.id),onChange:e=>{if(e.target.checked){setSelectedLeads([...selectedLeads,lead.id]);}else{setSelectedLeads(selectedLeads.filter(id=>id!==lead.id));}}}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 min-w-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-primary-600 truncate mr-2\",children:lead.nome}),/*#__PURE__*/_jsx(\"p\",{className:\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\",children:lead.status||'Novo'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm text-gray-500 space-x-2\",children:[lead.email&&/*#__PURE__*/_jsx(\"span\",{className:\"truncate\",children:lead.email}),lead.telefone&&/*#__PURE__*/_jsx(\"span\",{children:lead.telefone}),lead.plano_atual&&/*#__PURE__*/_jsx(\"span\",{children:lead.plano_atual})]})]})})]})},lead.id))})}),showDistribuirModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900\",children:\"Distribuir Leads\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowDistribuirModal(false),className:\"text-gray-400 hover:text-gray-500\",children:/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-6 w-6\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Selecione o corretor\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCorretor,onChange:e=>setSelectedCorretor(e.target.value),className:\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione um corretor\"}),corretores.map(corretor=>/*#__PURE__*/_jsx(\"option\",{value:corretor.id,children:corretor.name||corretor.email},corretor.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowDistribuirModal(false),className:\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\",children:\"Cancelar\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:distribuirLeads,disabled:!selectedCorretor,className:\"px-4 py-2 rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 disabled:bg-gray-300 disabled:cursor-not-allowed\",children:[\"Distribuir \",selectedLeads.length,\" leads\"]})]})]})]})}),showUploadModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl max-w-2xl w-full p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900\",children:\"Importar Leads\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowUploadModal(false),className:\"text-gray-400 hover:text-gray-500\",children:/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-6 w-6\"})})]}),uploadStatus&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-4 rounded-md \".concat(uploadStatus.success?'bg-green-50':'bg-red-50'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:uploadStatus.success?/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-5 w-5 text-green-400\"}):/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-5 w-5 text-red-400\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm \".concat(uploadStatus.success?'text-green-800':'text-red-800'),children:uploadStatus.message})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Selecione o arquivo CSV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:handleFileSelect,className:\"block w-full text-sm text-gray-500\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-md file:border-0\\r file:text-sm file:font-medium\\r file:bg-primary-50 file:text-primary-700\\r hover:file:bg-primary-100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-gray-50 rounded-md\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-900 mb-2\",children:\"Colunas aceitas:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 gap-2 text-sm text-gray-600\",children:COLUNAS_PERMITIDAS.map(coluna=>/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:coluna})},coluna))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowUploadModal(false),className:\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\",children:\"Cancelar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:!selectedFile||uploading,className:\"px-4 py-2 rounded-md text-sm font-medium text-white\\n                    \".concat(!selectedFile||uploading?'bg-gray-300 cursor-not-allowed':'bg-primary-600 hover:bg-primary-700'),children:uploading?'Importando...':'Importar'})]})]})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","db","collection","writeBatch","doc","query","getDocs","orderBy","where","getDoc","Timestamp","CloudArrowUpIcon","XCircleIcon","CheckCircleIcon","TrashIcon","UserGroupIcon","jsx","_jsx","jsxs","_jsxs","COLUNAS_PERMITIDAS","Leads","uploading","setUploading","uploadStatus","setUploadStatus","selectedFile","setSelectedFile","showUploadModal","setShowUploadModal","showDistribuirModal","setShowDistribuirModal","leads","setLeads","loading","setLoading","selectedLeads","setSelectedLeads","corretores","setCorretores","selectedCorretor","setSelectedCorretor","stats","setStats","naoDistribuidos","distribuidos","carregarLeads","leadsRef","q","snapshot","leadsData","docs","map","_objectSpread","id","data","length","error","console","carregarCorretores","corretoresRef","corretoresData","distribuirLeads","leadsExistentes","leadsInexistentes","leadsJaDistribuidos","leadId","leadDoc","exists","push","corretor_id","mensagem","concat","alert","batch","forEach","leadRef","update","data_distribuicao","now","status","status_changes","commit","prevLeads","filter","lead","includes","prev","limparLista","window","confirm","delete","ref","processarArquivoCSV","file","reader","FileReader","onload","e","text","target","result","charCodeAt","slice","log","substring","replace","linhas","split","Error","primeiraLinha","separador","linhasValidas","linha","semEspacos","trim","cabecalho","col","toUpperCase","colunasValidas","some","isValid","join","colunasEncontradas","coluna","index","i","valores","val","Object","entries","_ref","toLowerCase","keys","created_at","Date","docRef","set","success","message","readAsText","handleFileSelect","event","files","type","handleUpload","className","children","onClick","checked","onChange","nome","email","telefone","plano_atual","value","corretor","name","disabled","accept"],"sources":["C:/Users/hexshadeveloper/Desktop/project/test1/src/components/gestor/Leads.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { db } from '../../firebase';\r\nimport { collection, writeBatch, doc, query, getDocs, orderBy, where, getDoc, Timestamp } from 'firebase/firestore';\r\nimport { CloudArrowUpIcon, XCircleIcon, CheckCircleIcon, TrashIcon, UserGroupIcon } from '@heroicons/react/24/outline';\r\n\r\nconst COLUNAS_PERMITIDAS = [\r\n  'NOME',\r\n  'POSSUI CNPJ',\r\n  'TELEFONE',\r\n  'EMAIL',\r\n  'IDADES',\r\n  'PROFISSAO',\r\n  'PLANO ATUAL',\r\n  'STATUS'\r\n];\r\n\r\nexport default function Leads() {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [showDistribuirModal, setShowDistribuirModal] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedLeads, setSelectedLeads] = useState([]);\r\n  const [corretores, setCorretores] = useState([]);\r\n  const [selectedCorretor, setSelectedCorretor] = useState('');\r\n  const [stats, setStats] = useState({\r\n    naoDistribuidos: 0,\r\n    distribuidos: 0\r\n  });\r\n\r\n  // Função para carregar os leads\r\n  const carregarLeads = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const leadsRef = collection(db, 'leads');\r\n      // Modificado para buscar apenas leads não distribuídos\r\n      const q = query(\r\n        leadsRef,\r\n        where('corretor_id', '==', null),\r\n        orderBy('created_at', 'desc')\r\n      );\r\n      const snapshot = await getDocs(q);\r\n      \r\n      const leadsData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      setLeads(leadsData);\r\n      setStats({\r\n        naoDistribuidos: leadsData.length,\r\n        distribuidos: 0\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao carregar leads:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para carregar os corretores\r\n  const carregarCorretores = async () => {\r\n    try {\r\n      const corretoresRef = collection(db, 'users');\r\n      const q = query(corretoresRef, where('role', '==', 'corretor'));\r\n      const snapshot = await getDocs(q);\r\n      \r\n      const corretoresData = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      setCorretores(corretoresData);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar corretores:', error);\r\n    }\r\n  };\r\n\r\n  // Carrega os leads ao montar o componente\r\n  useEffect(() => {\r\n    carregarLeads();\r\n    carregarCorretores();\r\n  }, []);\r\n\r\n  // Função para distribuir leads\r\n  const distribuirLeads = async () => {\r\n    if (!selectedCorretor || selectedLeads.length === 0) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const leadsRef = collection(db, 'leads');\r\n      \r\n      // Primeiro, verifica se todos os leads selecionados ainda existem e não estão distribuídos\r\n      const leadsExistentes = [];\r\n      const leadsInexistentes = [];\r\n      const leadsJaDistribuidos = [];\r\n      \r\n      for (const leadId of selectedLeads) {\r\n        const leadDoc = await getDoc(doc(leadsRef, leadId));\r\n        if (!leadDoc.exists()) {\r\n          leadsInexistentes.push(leadId);\r\n        } else if (leadDoc.data().corretor_id) {\r\n          leadsJaDistribuidos.push(leadId);\r\n        } else {\r\n          leadsExistentes.push(leadId);\r\n        }\r\n      }\r\n\r\n      // Notifica sobre leads inexistentes ou já distribuídos\r\n      if (leadsInexistentes.length > 0 || leadsJaDistribuidos.length > 0) {\r\n        let mensagem = '';\r\n        if (leadsInexistentes.length > 0) {\r\n          mensagem += `${leadsInexistentes.length} lead(s) não existe(m) mais no sistema.\\n`;\r\n        }\r\n        if (leadsJaDistribuidos.length > 0) {\r\n          mensagem += `${leadsJaDistribuidos.length} lead(s) já foi(ram) distribuído(s) para outro corretor.\\n`;\r\n        }\r\n        alert(mensagem + 'A lista será atualizada.');\r\n        \r\n        if (leadsExistentes.length === 0) {\r\n          await carregarLeads();\r\n          setShowDistribuirModal(false);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Procede com a distribuição dos leads existentes e não distribuídos\r\n      const batch = writeBatch(db);\r\n\r\n      leadsExistentes.forEach(leadId => {\r\n        const leadRef = doc(leadsRef, leadId);\r\n        batch.update(leadRef, {\r\n          corretor_id: selectedCorretor,\r\n          data_distribuicao: Timestamp.now(),\r\n          status: 'novo',\r\n          status_changes: 0\r\n        });\r\n      });\r\n\r\n      await batch.commit();\r\n      \r\n      // Remove os leads distribuídos da lista local\r\n      setLeads(prevLeads => prevLeads.filter(lead => !leadsExistentes.includes(lead.id)));\r\n      \r\n      // Atualiza as estatísticas\r\n      setStats(prev => ({\r\n        ...prev,\r\n        naoDistribuidos: prev.naoDistribuidos - leadsExistentes.length,\r\n        distribuidos: prev.distribuidos + leadsExistentes.length\r\n      }));\r\n      \r\n      setSelectedLeads([]);\r\n      setShowDistribuirModal(false);\r\n      setSelectedCorretor('');\r\n\r\n      alert(`${leadsExistentes.length} lead(s) distribuído(s) com sucesso!`);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao distribuir leads:', error);\r\n      alert('Erro ao distribuir leads. Por favor, tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Função para limpar lista de leads\r\n  const limparLista = async () => {\r\n    if (!window.confirm('Tem certeza que deseja excluir todos os leads não distribuídos? Esta ação não pode ser desfeita.')) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const leadsRef = collection(db, 'leads');\r\n      const q = query(leadsRef, where('corretor_id', '==', null));\r\n      const snapshot = await getDocs(q);\r\n      \r\n      const batch = writeBatch(db);\r\n      snapshot.docs.forEach(doc => {\r\n        batch.delete(doc.ref);\r\n      });\r\n\r\n      await batch.commit();\r\n      await carregarLeads();\r\n    } catch (error) {\r\n      console.error('Erro ao limpar lista:', error);\r\n      alert('Erro ao limpar lista. Tente novamente.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const processarArquivoCSV = async (file) => {\r\n    setUploading(true);\r\n    setUploadStatus(null);\r\n\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        try {\r\n          let text = e.target.result;\r\n          \r\n          // Remove BOM se existir\r\n          if (text.charCodeAt(0) === 0xFEFF) {\r\n            text = text.slice(1);\r\n          }\r\n          \r\n          console.log('Conteúdo do arquivo:', text.substring(0, 500));\r\n          \r\n          // Normaliza quebras de linha\r\n          text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\r\n          \r\n          const linhas = text.split('\\n');\r\n          console.log('Número de linhas:', linhas.length);\r\n          \r\n          if (linhas.length === 0) {\r\n            throw new Error('O arquivo está vazio');\r\n          }\r\n          \r\n          // Detecta o separador (vírgula ou ponto e vírgula)\r\n          const primeiraLinha = linhas[0];\r\n          const separador = primeiraLinha.includes(';') ? ';' : ',';\r\n          console.log('Separador detectado:', separador);\r\n          \r\n          // Remove linhas vazias\r\n          const linhasValidas = linhas.filter(linha => {\r\n            const semEspacos = linha.trim();\r\n            return semEspacos && semEspacos !== separador;\r\n          });\r\n\r\n          if (linhasValidas.length === 0) {\r\n            throw new Error('O arquivo não contém dados válidos');\r\n          }\r\n          \r\n          console.log('Primeira linha:', linhasValidas[0]);\r\n          \r\n          // Processa o cabeçalho\r\n          const cabecalho = linhasValidas[0]\r\n            .split(separador)\r\n            .map(col => col.trim())\r\n            .map(col => col.replace(/\"/g, ''))\r\n            .map(col => col.toUpperCase());\r\n          \r\n          console.log('Colunas encontradas:', cabecalho);\r\n          console.log('Colunas permitidas:', COLUNAS_PERMITIDAS);\r\n          \r\n          // Verifica cada coluna encontrada\r\n          const colunasValidas = cabecalho.some(col => {\r\n            const isValid = COLUNAS_PERMITIDAS.includes(col);\r\n            console.log(`Coluna \"${col}\" é válida? ${isValid}`);\r\n            return isValid;\r\n          });\r\n\r\n          if (!colunasValidas) {\r\n            throw new Error(\r\n              'O arquivo não contém nenhuma das colunas permitidas.\\n\\n' +\r\n              `Colunas encontradas: ${cabecalho.join(', ')}\\n\\n` +\r\n              `Colunas permitidas: ${COLUNAS_PERMITIDAS.join(', ')}`\r\n            );\r\n          }\r\n          \r\n          const colunasEncontradas = {};\r\n          cabecalho.forEach((coluna, index) => {\r\n            if (COLUNAS_PERMITIDAS.includes(coluna)) {\r\n              colunasEncontradas[coluna] = index;\r\n            }\r\n          });\r\n\r\n          const leads = [];\r\n          \r\n          // Processa as linhas de dados\r\n          for (let i = 1; i < linhasValidas.length; i++) {\r\n            const linha = linhasValidas[i];\r\n            const valores = linha.split(separador).map(val => val.trim());\r\n            \r\n            const lead = {};\r\n            Object.entries(colunasEncontradas).forEach(([coluna, index]) => {\r\n              if (valores[index]) {\r\n                lead[coluna.toLowerCase().replace(/ /g, '_')] = valores[index].replace(/\"/g, '').trim();\r\n              }\r\n            });\r\n\r\n            if (Object.keys(lead).length > 0) {\r\n              lead.created_at = new Date();\r\n              lead.corretor_id = null;\r\n              leads.push(lead);\r\n            }\r\n          }\r\n\r\n          if (leads.length === 0) {\r\n            throw new Error('Nenhum lead válido encontrado no arquivo.');\r\n          }\r\n\r\n          console.log('Leads processados:', leads.slice(0, 2));\r\n\r\n          const batch = writeBatch(db);\r\n          const leadsRef = collection(db, 'leads');\r\n          \r\n          leads.forEach(lead => {\r\n            const docRef = doc(leadsRef);\r\n            batch.set(docRef, lead);\r\n          });\r\n\r\n          await batch.commit();\r\n          await carregarLeads(); // Recarrega os leads após salvar\r\n          \r\n          setUploadStatus({\r\n            success: true,\r\n            message: `${leads.length} leads importados com sucesso!`\r\n          });\r\n          setSelectedFile(null);\r\n          setShowUploadModal(false); // Fecha o modal após o sucesso\r\n          \r\n        } catch (error) {\r\n          console.error('Erro detalhado:', error);\r\n          setUploadStatus({\r\n            success: false,\r\n            message: error.message || 'Erro ao processar o arquivo CSV.'\r\n          });\r\n        }\r\n      };\r\n\r\n      reader.readAsText(file, 'UTF-8');\r\n    } catch (error) {\r\n      console.error('Erro no processamento:', error);\r\n      setUploadStatus({\r\n        success: false,\r\n        message: 'Erro ao processar o arquivo.'\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (file.type !== 'text/csv') {\r\n        setUploadStatus({\r\n          success: false,\r\n          message: 'Por favor, selecione um arquivo CSV.'\r\n        });\r\n        return;\r\n      }\r\n      setSelectedFile(file);\r\n      setUploadStatus(null);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (selectedFile) {\r\n      processarArquivoCSV(selectedFile);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-6 py-8\">\r\n      <div className=\"mb-6 flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Leads</h1>\r\n          <div className=\"mt-2 flex items-center space-x-4 text-sm\">\r\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\r\n              {stats.naoDistribuidos} não distribuídos\r\n            </span>\r\n            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n              {stats.distribuidos} distribuídos\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex space-x-4\">\r\n          {selectedLeads.length > 0 && (\r\n            <button\r\n              onClick={() => setShowDistribuirModal(true)}\r\n              className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\r\n            >\r\n              <UserGroupIcon className=\"h-5 w-5 mr-2\" />\r\n              Distribuir ({selectedLeads.length})\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={() => setShowUploadModal(true)}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            <CloudArrowUpIcon className=\"h-5 w-5 mr-2\" />\r\n            Importar CSV\r\n          </button>\r\n          {stats.naoDistribuidos > 0 && (\r\n            <button\r\n              onClick={limparLista}\r\n              className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n            >\r\n              <TrashIcon className=\"h-5 w-5 mr-2\" />\r\n              Limpar Lista\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Lista de Leads */}\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\r\n        {loading ? (\r\n          <div className=\"p-4 text-center text-gray-500\">Carregando leads...</div>\r\n        ) : leads.length === 0 ? (\r\n          <div className=\"p-4 text-center text-gray-500\">Nenhum lead encontrado</div>\r\n        ) : (\r\n          <ul className=\"divide-y divide-gray-200\">\r\n            {leads.map(lead => (\r\n              <li key={lead.id} className=\"px-4 py-2 hover:bg-gray-50\">\r\n                <div className=\"flex items-center\">\r\n                  {!lead.corretor_id && (\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded mr-4\"\r\n                      checked={selectedLeads.includes(lead.id)}\r\n                      onChange={(e) => {\r\n                        if (e.target.checked) {\r\n                          setSelectedLeads([...selectedLeads, lead.id]);\r\n                        } else {\r\n                          setSelectedLeads(selectedLeads.filter(id => id !== lead.id));\r\n                        }\r\n                      }}\r\n                    />\r\n                  )}\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center\">\r\n                        <p className=\"text-sm font-medium text-primary-600 truncate mr-2\">\r\n                          {lead.nome}\r\n                        </p>\r\n                        <p className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                          {lead.status || 'Novo'}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"flex items-center text-sm text-gray-500 space-x-2\">\r\n                        {lead.email && <span className=\"truncate\">{lead.email}</span>}\r\n                        {lead.telefone && <span>{lead.telefone}</span>}\r\n                        {lead.plano_atual && <span>{lead.plano_atual}</span>}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de Distribuição */}\r\n      {showDistribuirModal && (\r\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg font-medium text-gray-900\">Distribuir Leads</h2>\r\n              <button\r\n                onClick={() => setShowDistribuirModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircleIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Selecione o corretor\r\n                </label>\r\n                <select\r\n                  value={selectedCorretor}\r\n                  onChange={(e) => setSelectedCorretor(e.target.value)}\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Selecione um corretor</option>\r\n                  {corretores.map(corretor => (\r\n                    <option key={corretor.id} value={corretor.id}>\r\n                      {corretor.name || corretor.email}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowDistribuirModal(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={distribuirLeads}\r\n                  disabled={!selectedCorretor}\r\n                  className=\"px-4 py-2 rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 disabled:bg-gray-300 disabled:cursor-not-allowed\"\r\n                >\r\n                  Distribuir {selectedLeads.length} leads\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de Upload */}\r\n      {showUploadModal && (\r\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg font-medium text-gray-900\">Importar Leads</h2>\r\n              <button\r\n                onClick={() => setShowUploadModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircleIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            {uploadStatus && (\r\n              <div className={`mb-4 p-4 rounded-md ${uploadStatus.success ? 'bg-green-50' : 'bg-red-50'}`}>\r\n                <div className=\"flex\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    {uploadStatus.success ? (\r\n                      <CheckCircleIcon className=\"h-5 w-5 text-green-400\" />\r\n                    ) : (\r\n                      <XCircleIcon className=\"h-5 w-5 text-red-400\" />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className={`text-sm ${uploadStatus.success ? 'text-green-800' : 'text-red-800'}`}>\r\n                      {uploadStatus.message}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Selecione o arquivo CSV\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".csv\"\r\n                  onChange={handleFileSelect}\r\n                  className=\"block w-full text-sm text-gray-500\r\n                    file:mr-4 file:py-2 file:px-4\r\n                    file:rounded-md file:border-0\r\n                    file:text-sm file:font-medium\r\n                    file:bg-primary-50 file:text-primary-700\r\n                    hover:file:bg-primary-100\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-6 p-4 bg-gray-50 rounded-md\">\r\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Colunas aceitas:</h3>\r\n                <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-600\">\r\n                  {COLUNAS_PERMITIDAS.map(coluna => (\r\n                    <div key={coluna} className=\"flex items-center\">\r\n                      <span className=\"text-xs\">{coluna}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowUploadModal(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={handleUpload}\r\n                  disabled={!selectedFile || uploading}\r\n                  className={`px-4 py-2 rounded-md text-sm font-medium text-white\r\n                    ${!selectedFile || uploading\r\n                      ? 'bg-gray-300 cursor-not-allowed'\r\n                      : 'bg-primary-600 hover:bg-primary-700'}`}\r\n                >\r\n                  {uploading ? 'Importando...' : 'Importar'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}